rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    match /{document=**} {
      allow read, write: if false;
    }
    
    match /users/{userId} {
      allow read: if request.auth.uid != null;
      allow write: if false;
    }

    match /leaguers/{userId} {
      allow read: if request.auth.uid != null;
      allow write: if request.auth.uid == userId;

      // profile pic ids are added by the server, anyone can read
      match /profile_pics/{picId} {
        allow read: if request.auth.uid != null;
        allow create: if false;
        allow update: if false;
        allow delete: if request.auth.uid == userId;
        // exists(/databases/$(database)/documents/leaguers/$(request.auth.uid));
      }
    }

    // Match any document in the 'conversations' collection
    match /conversations/{conversationId} {

			// anyone can create, only conversation participants can read
      allow create: if request.auth.uid != null;
      allow update: if false;
      allow delete: if false;
      allow read: if request.auth.uid in resource.data.uids;

      // messages can be created and read by conversation participants 
      // see: https://firebase.google.com/docs/firestore/solutions/role-based-access
      match /leave/{userId} {
        allow create: if request.auth.uid == userId;
      }

			// messages can be created and read by conversation participants 
      // see: https://firebase.google.com/docs/firestore/solutions/role-based-access
      match /messages/{messageId} {
        allow create: if request.auth.uid in get(/databases/$(database)/documents/conversations/$(conversationId)).data.uids;
        allow update: if false;
        allow delete: if false;
        allow read: if request.auth.uid in get(/databases/$(database)/documents/conversations/$(conversationId)).data.uids;
      }
    }
  }
}