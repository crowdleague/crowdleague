name: iOS and Android

on:
  push:
    branches:
      - master

jobs:
  build:
    name: Build and distribute
    runs-on: macOS-latest
    steps:

    # several actions use checkout 
    - name: Install checkout
      uses: actions/checkout@v2
    
    ##############################################
    # flutter-action
    ##############################################
    # the flutter-action action seems to need java
    - name: Install Java, for building Flutter tool
      uses: actions/setup-java@v1
      with:
        java-version: '12.x'
    # use flutter-action configured with flutter channel
    - name: Install Flutter tool
      uses: subosito/flutter-action@v1
      with:
        channel: 'dev' # or: 'stable' or 'beta'
    
    ##############################################
    # setup-gcloud
    ##############################################
    # the setup-gcloud action seems to need python
    - name: Install python, for building gcloud
      uses: actions/setup-python@v1
      with:
        python-version: '3.x'
    # use setup-gcloud configured with auth credentials 
    - name: Install gcloud and use gsutil to download credentials
      uses: GoogleCloudPlatform/github-actions/setup-gcloud@master
      with:
        version: '270.0.0'
        service_account_email: ${{ secrets.GSUTIL_SERVICE_ACC_EMAIL }}
        service_account_key: ${{ secrets.GSUTIL_SERVICE_ACC_PASSWORD }}

    # download credential files for ios 
    - run: gsutil cp gs://crowdleague-credentials/GoogleService-Info.plist ./ios/Runner/GoogleService-Info.plist
    - run: gsutil cp gs://crowdleague-credentials/gc_keys.json ./ios/gc_keys.json
    # download credential files for android
    - run: gsutil cp gs://crowdleague-credentials/google-services.json ./android/app/google-services.json
    - run: gsutil cp gs://crowdleague-credentials/keystore.jks ./android/app/keystore.jks
    - run: gsutil cp gs://crowdleague-credentials/keystore.config ./android/app/keystore.config
    - run: gsutil cp gs://crowdleague-credentials/crowdleague-fastlane-manager.json ./android/crowdleague-fastlane-manager.json

    # build ios app and android app
    - run: flutter pub get
    - run: flutter pub run build_runner build
    - run: flutter test
    - run: flutter build appbundle -t lib/app/main.dart --build-number=$GITHUB_RUN_NUMBER
    - run: flutter build ios -t lib/app/main.dart --release --no-codesign --build-number=$GITHUB_RUN_NUMBER

    # get screenshots 
    - run: brew install imagemagick
    - run: flutter pub global activate -sgit https://github.com/mmcc007/screenshots
    - run: ~/hostedtoolcache/flutter/1.18.0-dev.5.0-dev/x64/.pub-cache/bin/screenshots

    ##############################################
    # run fastlane to build and sign apps and deploy 
    ##############################################
    - name: Install Fastlane to perform second build for signing, then deploy to App Store
      uses: maierj/fastlane-action@v1.4.0
      env:
        FASTLANE_PASSWORD: ${{ secrets.FASTLANE_PASSWORD }}
      with:
        lane: 'build_signed_and_deploy_internal'
        subdirectory: 'ios'
    - name: Use fastlane to deploy to Play Store 
      uses: maierj/fastlane-action@v1.4.0
      with:
        lane: 'deploy_internal'
        subdirectory: 'android'
